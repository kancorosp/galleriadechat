<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>チャット参加</title>
    <link rel="stylesheet" type="text/css" href="/font-awesome-4.7.0/css/font-awesome.css">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" type="text/css" href="/css/chat.css">
    <link rel="stylesheet" type="text/css" href="/css/stylerandomchat.css">
    <link href="https://fonts.googleapis.com/css?family=Roboto">
    <style>
        label,
        input {
            display: block;
        }
        
        input.text {
            margin-bottom: 12px;
            width: 95%;
            padding: .4em;
        }
        
        fieldset {
            padding: 0;
            border: 0;
            margin-top: 25px;
        }
        
        .ui-dialog .ui-state-error {
            padding: .3em;
        }
    </style>
</head>

<body>
    <div class="wrap">
        <header class="clearfix">
            <div class="nav">
                <div class="logo">
                    <p class="Top"><a href="/">Galledia de Chat</a></p>
                </div>
                <ul class="top-menu">
                    <li class="top-menu-item">
                        <a href="#"></a>
                    </li>
                    <li class="top-menu-item">
                        <a href="#"></a>
                    </li>
                </ul>
            </div>
        </header>
    </div>
    <div class="clearfix"></div>
    <div class="container clearfix">
        <div class="chat-container">
            <div class="chat">
                <div class="chat-header clearfix">
                    メッセージ
                    <i class="fa fa-users"></i>
                </div>

                <div class="chat-history">
                    <ul>
                    </ul>
                </div>
                <!-- end chat-history -->
            </div>
            <!-- end chat -->

            <div class="controls">
                <div class="room-name" style="height: 30px; color: white">
                    <span><%= name %></span>
                </div>
                <div>

                </div>
            </div>

            <div class="users-list">
                <ul class="list">

                </ul>
            </div>
        </div>
    </div>
    <footer class="footer">
        <small>@2017 WillTREE</small>
    </footer>
    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery-ui.js"></script>
    <script src="/js/socket.io.js"></script>
    <script src="/js/common.js"></script>

    <script>
        var namespace = '<%= namespace %>';
        var roomId = '<%= roomId %>';

        var colorList = [];
        var userColors = {};

        if (namespace != 'bar_join') {
            colorList = ["color-2", "color-3", "color-4"];
        } else {
            colorList = ["color-1", "color-2", "color-3", "color-4", "color-5", "color-6", "color-7", "color-8"];
        }

        var userId = ''; // User ID

        var socket = io('/' + namespace, {
            transports: ['websocket']
        });
        socket.on('connect', function(data) {
            socket.emit('view-join', roomId);
        });

        socket.on('broad', function(data) {
            //$('#future').append(data + "<br/>");
            addMessage(data, true);
        });

        socket.on('removeRoom', function(data) {
            alert('ルームが解散します');
            window.location.href = '/';
        });

        socket.on('removeUser', function(data) {
            $('#user-' + data.userId).remove();
            addNotice(data.userName + " 退出しました");
        });

        socket.on('addNotice', function(notice) {
            // Add notice
            addNotice(notice);
        });

        // Update users list upon emitting updateUsersList event
        socket.on('updateUsersList', function(data, clear) {
            var users = data.users;
            var historyMesssages = data.histories;

            // If room was changed to private then get out
            if (!data.open) {
                alert('ルーム非公開されました');
                socket.emit('view-left', roomId);
                window.location.href = '/';
            }

            // Update user list
            $('.container p.message').remove();
            if (users.error != null) {
                $('.container').html(`<p class="message error">${users.error}</p>`);
            } else {
                updateUsersList(users, true);

                if (clear && historyMesssages && historyMesssages.length) {
                    console.log(historyMesssages);
                    historyMesssages.forEach(function(message) {
                        addMessage(message, false);
                    })
                }
            }

        });

        // Add message
        function addMessage(message, slidestate) {
            message.date = (new Date(message.date)).toLocaleString();
            message.username = encodeHTML(message.username);
            message.content = encodeHTML(message.content);

            var html = `
                  <li class="${userColors[message.userId]}">
                    <div class="message-data">
                      <span class="message-data-name">${message.username}</span>
                      <span class="message-data-time">${message.date}</span>
                      <span class="pull-right"><span class="small-text">よっ名言!</span><i class="fa fa-lg fa-thumbs-up like-icon"></i></span>
                    </div>
                    <span class="message my-message ${userColors[message.userId]}" _id="${message._id}" dir="auto">${message.content}</span>
                  </li>`;
            if (slidestate == true) {
                $(html).hide().appendTo('.chat-history ul').slideDown(200);
                // Keep scroll bar down
                $(".chat-history").animate({
                    scrollTop: $('.chat-history')[0].scrollHeight
                }, 1000);
            } else {
                $(html).hide().appendTo('.chat-history ul').slideDown(10);
                // Keep scroll bar down
                $(".chat-history").animate({
                    scrollTop: $('.chat-history')[0].scrollHeight
                }, 10);
            }

        }

        // Add notice to chat history
        function addNotice(content) {
            var html = `<li><div><span class="chat-notice">${content}</span></div></li>`;
            $(html).hide().appendTo('.chat-history ul').slideDown(200);
        }

        // Update users list
        function updateUsersList(users, clear) {

            var html = '';
            for (var uId in users) {
                var userName = '';
                if (users.hasOwnProperty(uId)) {
                    userName = users[uId];
                }
                // Set color for each user
                if (!userColors.hasOwnProperty(uId)) {
                    if (namespace != 'join_bar') {
                        for (var j = 0; j < 3; j++) {
                            if (Object.values(userColors).indexOf(colorList[j]) == -1) {
                                userColors[uId] = colorList[j];
                                break;
                            }
                        }
                    } else {
                        for (var j = 0; j < 8; j++) {
                            if (Object.values(userColors).indexOf(colorList[j]) == -1) {
                                userColors[uId] = colorList[j];
                                break;
                            }
                        }
                    }
                }

                userName = this.encodeHTML(userName);
                html += `
                     <li class="clearfix" id="user-${uId}">
                         <img src="/img/user.jpg" alt="${userName}" />
                         <div class="about">
                            <div class="name">${userName}</div>
                            <div class="status"><i class="fa fa-circle online ${userColors[uId]}"></i> online</div>
                         </div>
                     </li>`;
            }

            if (html === '') {
                return;
            }

            if (clear != null && clear == true) {
                $('.users-list ul').html('').html(html);
            } else {
                $('.users-list ul').prepend(html);
            }
        }

        function encodeHTML(str) {
            return $('<div />').text(str).html();
        }
    </script>

</body>

</html>